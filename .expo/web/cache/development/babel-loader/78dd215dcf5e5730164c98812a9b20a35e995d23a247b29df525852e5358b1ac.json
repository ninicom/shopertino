{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignUpScreen = function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    signUpSuccess = _useState6[0],\n    setSignUpSuccess = _useState6[1];\n  var handleSignUp = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var existingUsername = yield AsyncStorage.getItem('username');\n        if (existingUsername === username) {\n          setSignUpSuccess(false);\n        } else {\n          yield AsyncStorage.setItem('username', username);\n          yield AsyncStorage.setItem('password', password);\n          setSignUpSuccess(true);\n        }\n      } catch (error) {\n        console.error('Error storing credentials:', error);\n        setSignUpSuccess(false);\n      }\n    });\n    return function handleSignUp() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      barStyle: \"dark-content\"\n    }), _jsxs(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      children: [_jsx(View, {\n        style: styles.inputContainer,\n        children: _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Username\",\n          value: username,\n          onChangeText: function onChangeText(text) {\n            return setUsername(text);\n          }\n        })\n      }), _jsx(View, {\n        style: styles.inputContainer,\n        children: _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Password\",\n          secureTextEntry: true,\n          value: password,\n          onChangeText: function onChangeText(text) {\n            return setPassword(text);\n          }\n        })\n      }), _jsxs(View, {\n        style: styles.buttonContainer,\n        children: [_jsx(Button, {\n          title: \"Sign Up\",\n          onPress: handleSignUp\n        }), _jsx(Button, {\n          title: \"Back\",\n          onPress: function onPress() {\n            return navigation.navigate('LandingScreen');\n          }\n        })]\n      }), signUpSuccess === true && _jsxs(Text, {\n        style: styles.successMessage,\n        children: [\"Sign up successful! You can now\", ' ', _jsx(Text, {\n          style: styles.loginLink,\n          onPress: function onPress() {\n            return navigation.navigate('LoginScreen');\n          },\n          children: \"Login now.\"\n        })]\n      }), signUpSuccess === false && _jsx(Text, {\n        style: styles.errorMessage,\n        children: \"Sign up failed. The account already exists or there was an error.\"\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'lightgray'\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16,\n    width: '70%'\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    paddingHorizontal: 16\n  },\n  buttonContainer: {\n    backgroundColor: '#0099cc',\n    width: '70%',\n    marginBottom: 16,\n    borderRadius: 20,\n    overflow: 'hidden'\n  },\n  successMessage: {\n    color: 'green',\n    marginTop: 10,\n    textAlign: 'center'\n  },\n  errorMessage: {\n    color: 'red',\n    marginTop: 10,\n    textAlign: 'center'\n  },\n  loginLink: {\n    color: 'blue',\n    textDecorationLine: 'underline'\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","SafeAreaView","ScrollView","StatusBar","AsyncStorage","jsx","_jsx","jsxs","_jsxs","SignUpScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","signUpSuccess","setSignUpSuccess","handleSignUp","_ref2","_asyncToGenerator","existingUsername","getItem","setItem","error","console","apply","arguments","style","styles","container","children","barStyle","contentContainerStyle","scrollContainer","inputContainer","input","placeholder","value","onChangeText","text","secureTextEntry","buttonContainer","title","onPress","navigate","successMessage","loginLink","errorMessage","create","flex","backgroundColor","flexGrow","justifyContent","alignItems","padding","flexDirection","marginBottom","width","height","borderRadius","paddingHorizontal","overflow","color","marginTop","textAlign","textDecorationLine"],"sources":["T:/Mobile/DangTienQuyen_mobile/Screens/SignUpScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Button,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  StatusBar,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst SignUpScreen = ({ navigation }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [signUpSuccess, setSignUpSuccess] = useState(null);\r\n\r\n  const handleSignUp = async () => {\r\n    try {\r\n      // Check if the username already exists in AsyncStorage\r\n      const existingUsername = await AsyncStorage.getItem('username');\r\n      if (existingUsername === username) {\r\n        setSignUpSuccess(false); // Username already exists\r\n      } else {\r\n        // Store the username and password in AsyncStorage\r\n        await AsyncStorage.setItem('username', username);\r\n        await AsyncStorage.setItem('password', password);\r\n\r\n        setSignUpSuccess(true); // Sign-up successful\r\n      }\r\n    } catch (error) {\r\n      console.error('Error storing credentials:', error);\r\n      setSignUpSuccess(false); // Sign-up failed\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <StatusBar barStyle=\"dark-content\" />\r\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            onChangeText={(text) => setUsername(text)}\r\n          />\r\n        </View>\r\n        <View style={styles.inputContainer}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Password\"\r\n            secureTextEntry\r\n            value={password}\r\n            onChangeText={(text) => setPassword(text)}\r\n          />\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <Button title=\"Sign Up\" onPress={handleSignUp} />\r\n          <Button title='Back' onPress={() => navigation.navigate('LandingScreen')} />\r\n        </View>\r\n        {signUpSuccess === true && (\r\n          <Text style={styles.successMessage}>\r\n            Sign up successful! You can now{' '}\r\n            <Text\r\n              style={styles.loginLink}\r\n              onPress={() => navigation.navigate('LoginScreen')}\r\n            >\r\n              Login now.\r\n            </Text>\r\n          </Text>\r\n        )}\r\n        {signUpSuccess === false && (\r\n          <Text style={styles.errorMessage}>\r\n            Sign up failed. The account already exists or there was an error.\r\n          </Text>\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'lightgray',\r\n  },\r\n  scrollContainer: {\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  inputContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 16,\r\n    width: '70%',\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    height: 40,\r\n    backgroundColor: 'white',\r\n    borderRadius: 20,\r\n    paddingHorizontal: 16,\r\n  },\r\n  buttonContainer: {\r\n    backgroundColor: '#0099cc',\r\n    width: '70%',\r\n    marginBottom: 16,\r\n    borderRadius: 20,\r\n    overflow: 'hidden',\r\n  },\r\n  successMessage: {\r\n    color: 'green',\r\n    marginTop: 10,\r\n    textAlign: 'center',\r\n  },\r\n  errorMessage: {\r\n    color: 'red',\r\n    marginTop: 10,\r\n    textAlign: 'center',\r\n  },\r\n  loginLink: {\r\n    color: 'blue',\r\n    textDecorationLine: 'underline',\r\n  },\r\n});\r\n\r\nexport default SignUpScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}