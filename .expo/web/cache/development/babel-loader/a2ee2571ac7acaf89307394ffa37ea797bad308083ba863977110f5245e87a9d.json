{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ReactNative from \"react-native-web/dist/index\";\nimport { childrenWithOverriddenStyle } from \"./utils\";\nimport { getViewManagerConfig, ViewpagerViewManager } from \"./ViewPagerNative\";\nexport var ViewPager = function (_React$Component) {\n  _inherits(ViewPager, _React$Component);\n  var _super = _createSuper(ViewPager);\n  function ViewPager() {\n    var _this;\n    _classCallCheck(this, ViewPager);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"isScrolling\", false);\n    _defineProperty(_assertThisInitialized(_this), \"viewPager\", React.createRef());\n    _defineProperty(_assertThisInitialized(_this), \"getInnerViewNode\", function () {\n      return _this.viewPager.current.getInnerViewNode();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_onPageScroll\", function (e) {\n      if (_this.props.onPageScroll) {\n        _this.props.onPageScroll(e);\n      }\n      if (Platform.OS === 'android') {\n        if (_this.props.keyboardDismissMode === 'on-drag') {\n          Keyboard.dismiss();\n        }\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_onPageScrollStateChanged\", function (e) {\n      if (_this.props.onPageScrollStateChanged) {\n        _this.props.onPageScrollStateChanged(e);\n      }\n      _this.isScrolling = e.nativeEvent.pageScrollState === 'dragging';\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_onPageSelected\", function (e) {\n      if (_this.props.onPageSelected) {\n        _this.props.onPageSelected(e);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setPage\", function (selectedPage) {\n      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(_assertThisInitialized(_this)), getViewManagerConfig().Commands.setPage, [selectedPage]);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setPageWithoutAnimation\", function (selectedPage) {\n      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(_assertThisInitialized(_this)), getViewManagerConfig().Commands.setPageWithoutAnimation, [selectedPage]);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setScrollEnabled\", function (scrollEnabled) {\n      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(_assertThisInitialized(_this)), getViewManagerConfig().Commands.setScrollEnabled, [scrollEnabled]);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_onMoveShouldSetResponderCapture\", function () {\n      return _this.isScrolling;\n    });\n    return _this;\n  }\n  _createClass(ViewPager, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (Platform.OS === 'android') {\n        if (this.props.initialPage != null) {\n          this.setPageWithoutAnimation(this.props.initialPage);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ViewpagerViewManager, _extends({}, this.props, {\n        ref: this.viewPager,\n        style: this.props.style,\n        onPageScroll: this._onPageScroll,\n        onPageScrollStateChanged: this._onPageScrollStateChanged,\n        onPageSelected: this._onPageSelected,\n        onMoveShouldSetResponderCapture: this._onMoveShouldSetResponderCapture,\n        children: childrenWithOverriddenStyle(this.props.children)\n      }));\n    }\n  }]);\n  return ViewPager;\n}(React.Component);","map":{"version":3,"names":["React","Platform","UIManager","Keyboard","ReactNative","childrenWithOverriddenStyle","getViewManagerConfig","ViewpagerViewManager","ViewPager","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","createRef","viewPager","current","getInnerViewNode","e","props","onPageScroll","OS","keyboardDismissMode","dismiss","onPageScrollStateChanged","isScrolling","nativeEvent","pageScrollState","onPageSelected","selectedPage","dispatchViewManagerCommand","findNodeHandle","Commands","setPage","setPageWithoutAnimation","scrollEnabled","setScrollEnabled","_createClass","key","value","componentDidMount","initialPage","render","createElement","_extends","ref","style","_onPageScroll","_onPageScrollStateChanged","_onPageSelected","onMoveShouldSetResponderCapture","_onMoveShouldSetResponderCapture","children","Component"],"sources":["T:\\Mobile\\DangTienQuyen_mobile\\node_modules\\@react-native-community\\viewpager\\lib\\module\\ViewPager.tsx"],"sourcesContent":["import React, { ReactElement } from 'react';\nimport { Platform, UIManager, Keyboard } from 'react-native';\nimport ReactNative from 'react-native';\nimport type {\n  ViewPagerOnPageScrollEvent,\n  ViewPagerOnPageSelectedEvent,\n  PageScrollStateChangedNativeEvent,\n  ViewPagerProps,\n} from './types';\n\nimport { childrenWithOverriddenStyle } from './utils';\nimport { getViewManagerConfig, ViewpagerViewManager } from './ViewPagerNative';\n\n/**\n * Container that allows to flip left and right between child views. Each\n * child view of the `ViewPager` will be treated as a separate page\n * and will be stretched to fill the `ViewPager`.\n *\n * It is important all children are `<View>`s and not composite components.\n * You can set style properties like `padding` or `backgroundColor` for each\n * child. It is also important that each child have a `key` prop.\n *\n * Example:\n *\n * ```\n * render: function() {\n *   return (\n *     <ViewPager\n *       style={styles.viewPager}\n *       initialPage={0}>\n *       <View style={styles.pageStyle} key=\"1\">\n *         <Text>First page</Text>\n *       </View>\n *       <View style={styles.pageStyle} key=\"2\">\n *         <Text>Second page</Text>\n *       </View>\n *     </ViewPager>\n *   );\n * }\n *\n * ...\n *\n * var styles = {\n *   ...\n *   viewPager: {\n *     flex: 1\n *   },\n *   pageStyle: {\n *     alignItems: 'center',\n *     padding: 20,\n *   }\n * }\n * ```\n */\n\nexport class ViewPager extends React.Component<ViewPagerProps> {\n  private isScrolling = false;\n  private viewPager = React.createRef<typeof ViewpagerViewManager>();\n\n  componentDidMount() {\n    // On iOS we do it directly on the native side\n    if (Platform.OS === 'android') {\n      if (this.props.initialPage != null) {\n        this.setPageWithoutAnimation(this.props.initialPage);\n      }\n    }\n  }\n\n  public getInnerViewNode = (): ReactElement => {\n    return this.viewPager.current!.getInnerViewNode();\n  };\n\n  private _onPageScroll = (e: ViewPagerOnPageScrollEvent) => {\n    if (this.props.onPageScroll) {\n      this.props.onPageScroll(e);\n    }\n    // Not implemented on iOS yet\n    if (Platform.OS === 'android') {\n      if (this.props.keyboardDismissMode === 'on-drag') {\n        Keyboard.dismiss();\n      }\n    }\n  };\n\n  private _onPageScrollStateChanged = (\n    e: PageScrollStateChangedNativeEvent\n  ) => {\n    if (this.props.onPageScrollStateChanged) {\n      this.props.onPageScrollStateChanged(e);\n    }\n    this.isScrolling = e.nativeEvent.pageScrollState === 'dragging';\n  };\n\n  private _onPageSelected = (e: ViewPagerOnPageSelectedEvent) => {\n    if (this.props.onPageSelected) {\n      this.props.onPageSelected(e);\n    }\n  };\n\n  /**\n   * A helper function to scroll to a specific page in the ViewPager.\n   * The transition between pages will be animated.\n   */\n  public setPage = (selectedPage: number) => {\n    UIManager.dispatchViewManagerCommand(\n      ReactNative.findNodeHandle(this),\n      getViewManagerConfig().Commands.setPage,\n      [selectedPage]\n    );\n  };\n\n  /**\n   * A helper function to scroll to a specific page in the ViewPager.\n   * The transition between pages will *not* be animated.\n   */\n  public setPageWithoutAnimation = (selectedPage: number) => {\n    UIManager.dispatchViewManagerCommand(\n      ReactNative.findNodeHandle(this),\n      getViewManagerConfig().Commands.setPageWithoutAnimation,\n      [selectedPage]\n    );\n  };\n\n  /**\n   * A helper function to enable/disable scroll imperatively\n   * The recommended way is using the scrollEnabled prop, however, there might be a case where a\n   * imperative solution is more useful (e.g. for not blocking an animation)\n   */\n  public setScrollEnabled = (scrollEnabled: boolean) => {\n    UIManager.dispatchViewManagerCommand(\n      ReactNative.findNodeHandle(this),\n      getViewManagerConfig().Commands.setScrollEnabled,\n      [scrollEnabled]\n    );\n  };\n\n  private _onMoveShouldSetResponderCapture = () => {\n    return this.isScrolling;\n  };\n\n  render() {\n    return (\n      <ViewpagerViewManager\n        {...this.props}\n        ref={this.viewPager as any /** TODO: Fix ref type */}\n        style={this.props.style}\n        onPageScroll={this._onPageScroll}\n        onPageScrollStateChanged={this._onPageScrollStateChanged}\n        onPageSelected={this._onPageSelected}\n        onMoveShouldSetResponderCapture={this._onMoveShouldSetResponderCapture}\n        children={childrenWithOverriddenStyle(this.props.children)}\n      />\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}